(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"./src/__docs__/etc.mdx":function(e,a,n){"use strict";n.r(a),n.d(a,"default",function(){return d});var t=n("./node_modules/react/index.js"),m=n.n(t),o=n("./node_modules/@mdx-js/tag/dist/index.js");function p(e){return(p="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,a){if(null==e)return{};var n,t,m=function(e,a){if(null==e)return{};var n,t,m={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(m[n]=e[n]);return m}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(m[n]=e[n])}return m}function r(e,a){for(var n=0;n<a.length;n++){var t=a[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function c(e,a){return!a||"object"!==p(a)&&"function"!==typeof a?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):a}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,a){return(s=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e})(e,a)}var d=function(e){function a(e){var n;return function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,a),(n=c(this,i(a).call(this,e))).layout=null,n}var n,t,p;return function(e,a){if("function"!==typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&s(e,a)}(a,m.a.Component),n=a,(t=[{key:"render",value:function(){var e=this.props,a=e.components;l(e,["components"]);return m.a.createElement(o.MDXTag,{name:"wrapper",components:a},m.a.createElement(o.MDXTag,{name:"h1",components:a,props:{id:"other-topical-notes"}},"Other topical notes"),m.a.createElement(o.MDXTag,{name:"h2",components:a,props:{id:"building--commands"}},"Building & Commands"),m.a.createElement(o.MDXTag,{name:"p",components:a},"You'll notice the ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"package.json")," scripts are very simple.\nThat's because the build instructions were getting complex, so they were moved into a ",m.a.createElement(o.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/dfee/rbx/blob/master/Makefile"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"a"},"Makefile")),"."),m.a.createElement(o.MDXTag,{name:"p",components:a},"By running the ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"make help")," command in the root of a cloned repo, you'll see the available options (including building, testing, etc.)"),m.a.createElement(o.MDXTag,{name:"h3",components:a,props:{id:"testing"}},"Testing"),m.a.createElement(o.MDXTag,{name:"p",components:a},"The robust way to test is with ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"make test"),", which will:"),m.a.createElement(o.MDXTag,{name:"ol",components:a},m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ol"},"run ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"tslint")," to verify the code"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ol"},"run ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"jest")," for unit and snapshot testing"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ol"},"output a coverage report")),m.a.createElement(o.MDXTag,{name:"p",components:a},"For convenience, you'll often want to use ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"npx jest the/file/to/test.ts")," to run tests on a particular file."),m.a.createElement(o.MDXTag,{name:"h3",components:a,props:{id:"building"}},"Building"),m.a.createElement(o.MDXTag,{name:"p",components:a},"The general way to build is to use ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"make"),", which will:"),m.a.createElement(o.MDXTag,{name:"ol",components:a},m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ol"},"compile the code into ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"ECMAScript 6")," with ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"tsc")," into the '/dist' directory"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ol"},"compile that ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"ES6")," code into ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"UMD")," (",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"Universal Module Definition"),") code using ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"rollup")," (as ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"rbx.umd.js")," extension)."),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ol"},"copy and compile the ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"SASS")," code into ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"CSS"),", output to the ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"/dist")," directory"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ol"},"copy and modify the ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"package.json")," so that it can be published to ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"npm")," without requiring imports from a root directory (i.e. ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"import { DEFAULTS } from 'rbx/base/helpers/variables';")," rather than ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"import { DEFAULTS } from 'rbx/dist/base/helpers/variables"),").")),m.a.createElement(o.MDXTag,{name:"h3",components:a,props:{id:"publish"}},"Publish"),m.a.createElement(o.MDXTag,{name:"p",components:a},m.a.createElement(o.MDXTag,{name:"strong",components:a,parentName:"p"},"Important:")," do not use ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"npm publish")," to publish the code to ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"p"},"npm"),".\nRather, use ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"make publish")," which will publish the build result in ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"/dist"),"."),m.a.createElement(o.MDXTag,{name:"h2",components:a,props:{id:"contributing-and-releasing"}},"Contributing and releasing"),m.a.createElement(o.MDXTag,{name:"h3",components:a,props:{id:"authoring-a-pull-request-contributing"}},"Authoring a Pull Request (contributing)"),m.a.createElement(o.MDXTag,{name:"p",components:a},"To participate in development, here is the contribution process:"),m.a.createElement(o.MDXTag,{name:"ul",components:a},m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ","fork ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"rbx")," on GitHub"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git clone")," (create the repo locally)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git checkout master")),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git pull")," (updating ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"master"),")"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git checkout -b <new-branch>")," (create ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"feature")," or ",m.a.createElement(o.MDXTag,{name:"em",components:a,parentName:"li"},"bug")," branch)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ","implement code changes"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ","update documentation as appropriate (using ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make docs-dev"),")"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make test")," (for linting, unit tests, etc.)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make examples-test")," (for ensuring that the demos still work)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make")," (generating updated ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"size-snapshot.json"),")"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git add")," and ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git commit")),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git push origin <new-branch>")),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ","ensure CI coverage passes"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ","open pull request to master repo (",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"dfee/rbx"),")")),m.a.createElement(o.MDXTag,{name:"h3",components:a,props:{id:"after-the-pull-request-releasing"}},"After the Pull Request (releasing)"),m.a.createElement(o.MDXTag,{name:"p",components:a},"After an acceptable pull request is received, here is the release process:"),m.a.createElement(o.MDXTag,{name:"ul",components:a},m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git checkout master")),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git pull")),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git merge <new-branch>")),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"npm version")," (update package version)."),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git push master")," and ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git push origin <version-tag>")),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ","ensure CI coverage passes (again)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make")," (create a new release with updated version)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make publish")," (publish to NPM)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make docs")," and ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"make docs-publish")," (optional, build new docs for GitHub Pages)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ","publish release on GitHub (find tag, make release)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git branch -d <new-branch>")," (delete ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"<new-branch>")," locally)"),m.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul",props:{className:"task-list-item"}},m.a.createElement(o.MDXTag,{name:"input",components:a,parentName:"li",props:{type:"checkbox",checked:!1,disabled:!0}})," ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"git push --delete origin <new-branch>")," (delete ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"<new-branch>")," on remote)")))}}])&&r(n.prototype,t),p&&r(n,p),a}()}}]);
//# sourceMappingURL=src-docs-etc.6e56755a54cdfe517c0d.js.map