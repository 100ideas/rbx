{"version":3,"sources":["webpack:///./src/__docs__/customize.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href"],"mappings":"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","file":"static/js/src-docs-customize.cb80f4d5.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"customize-rbx\"}}>{`Customize rbx`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Sometimes the default `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://bulma.io\"}}>{`Bulma`}</MDXTag>{` styles aren't enough.\nThat's a feature and not a bug, and the Bulma docs are quick to demonstrate `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://bulma.io/documentation/customize/\"}}>{`how to customize the SASS`}</MDXTag>{` to your liking.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"modifying-sass-variables\"}}>{`Modifying SASS variables`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you're modifying SASS values without introducing anything new, you don't have to keep reading. If you are `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`adding`}</MDXTag>{` or `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`removing`}</MDXTag>{` variables (or `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`adding`}</MDXTag>{` to or `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`removing`}</MDXTag>{` from SASS arrays), the following docs `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`are`}</MDXTag>{` relevant.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are many places in `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`rbx`}</MDXTag>{` that leverage these variable overrides: the global modifier helpers (located at `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/base/helpers`}</MDXTag>{`) as well as components like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Button>`}</MDXTag>{` (and more than 20 others).`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"overview\"}}>{`Overview`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Before we get on to an example, here's an overview of how we use `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`TypeScript`}</MDXTag>{` to customize what props are supported.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Take a look at the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/dfee/rbx/blob/master/src/base/helpers/variables.ts\"}}>{`source code for the `}<MDXTag name=\"strong\" components={components} parentName=\"a\">{`helpers variables`}</MDXTag></MDXTag>{`, or the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/dfee/rbx/blob/master/src/elements/button/button.tsx\"}}>{`source code for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`<Button>`}</MDXTag></MDXTag>{`, and you'll notice two very important expressions:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`DEFAULTS`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`<COMPONOENT>_DEFAULTS`}</MDXTag>{` variable that defines the defaults in a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`tuple()`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Variables`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`<Component>Variables`}</MDXTag>{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`type`}</MDXTag>{` that uses those defaults to construct a `}<MDXTag name=\"em\" components={components} parentName=\"li\">{`TypeScript`}</MDXTag>{` type.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Looking deeper at the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`DEFFAULTS`}</MDXTag>{`, that's where the `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`Bulma`}</MDXTag>{` defaults are defined in code.\nFor example, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`colors`}</MDXTag>{` on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`DEFAULTS`}</MDXTag>{`, and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sizes`}</MDXTag>{` on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`BUTTON_DEFAULTS`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Looking deeper at the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Variables`}</MDXTag>{`, you'll realize that `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Variables`}</MDXTag>{` is actually just a merge of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`VariablesDefaults`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`VariablesOverrides`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Below we'll talk more about how to override these.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"an-example-introducing-a-new-color\"}}>{`An example: introducing a new color`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To add the color `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"react\"`}</MDXTag>{` (the React logo-color) so that all components can use it (across props like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`textColor`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`backgroundColor`}</MDXTag>{` as well as with component-specific props like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`color`}</MDXTag>{` on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Button>`}</MDXTag>{`), you'll need to extend the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\\$colors`}</MDXTag>{` variable before import Bulma's SASS.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Your new SASS file (imported somewhere in your App) will look something like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# App.sass\n\n@charset 'utf-8';\n\n@import \"~bulma/sass/utilities/functions\"\n\n// add new colors\n\\$react: #00d8ff !default\n\\$react-invert: findColorInvert(\\$react) !default\n\\$custom-colors: (\"react\": (\\$react, \\$react-invert))\n\n// Import Bulma styles\n@import \"~bulma/bulma\"\n\n// Import rbx style fixes (**very simple**)\n@import \"~rbx/rbx\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"update-the-theme\"}}>{`Update the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`<Theme>`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you've altered a `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://bulma.io/documentation/modifiers/\"}}>{`Bulma modifier`}</MDXTag>{`, you'll need to update the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Theme>`}</MDXTag>{` at the root of your App, so that `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.npmjs.com/package/prop-types\"}}>{`PropTypes`}</MDXTag>{` uses the proper values for prop type-checking.`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\"><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Note:`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.npmjs.com/package/prop-types\"}}><MDXTag name=\"em\" components={components} parentName=\"a\">{`PropTypes`}</MDXTag></MDXTag>{` only provides literal type-checks on the global helpers – those located in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`base/helpers`}</MDXTag>{`. I.e. `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`PropTypes`}</MDXTag>{` will check that your new `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"react\"`}</MDXTag>{` color is in fact a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`textColor`}</MDXTag>{`, but it will `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`not`}</MDXTag>{` check that `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"react\"`}</MDXTag>{` is a valid `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`color`}</MDXTag>{` for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Button>`}</MDXTag>{`, due to limitations on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PropTypes`}</MDXTag>{`.\nHowever, `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`TypeScript`}</MDXTag>{` can perform this extended validation (as described in the next section).`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// App.js\n\nimport { makeRootValidatingTransform } from \"rbx/base/helpers\";\nimport { DEFAULTS } from \"rbx/base/helpers/variables\";\nimport { tuple } from \"rbx/utils\";\n\nimport { MyAppNavbar } from \"./components\";\nimport \"./App.sass\";\n\nconst COLORS = tuple(...DEFAULTS.colors, \"react\");\n\nconst themeValue = {\n  transform: makeRootValidatingTransform({ colors: COLORS })\n};\n\nconst App = () => (\n  <ThemeContext.Provider value={themeValue}>\n    {/* supply your children components as you normally would */}\n    <MyAppNavbar />\n    <Button color=\"react\">Hello world</Button>\n  </ThemeContext.Provider>\n);\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you're not modifying a `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`Bulma modifier`}</MDXTag>{`, but instead are extending a component's `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`_`}{`DEFAULTS`}</MDXTag>{` (e.g. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`BUTTON_DEFAULTS`}</MDXTag>{`), you don't need to explicitly set the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Theme>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you're not using `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`TypeScript`}</MDXTag>{`, then `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`you're done`}</MDXTag>{`. Otherwise...`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"updating-the-typescript-types\"}}>{`Updating the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h3\">{`TypeScript`}</MDXTag>{` types`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To continue providing type-safety and prop auto-completion with this new configuration, you'll need to add an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`rbx.d.ts`}</MDXTag>{` file to your project.\nFor adding a color (as demonstrated above), this file will look like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// rbx.d.ts\n\nimport \"rbx/base/helpers/variables\";\nimport { VariablesDefaults } from \"rbx/base/helpers/variables\";\n\ndeclare module \"rbx/base/helpers/variables\" {\n  interface VariablesOverrides {\n    colors: VariablesDefaults[\"colors\"] | \"react\"; // we added \\`react\\`!\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you instead modify a component's defaults, and not a `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`Bulma modifier`}</MDXTag>{`, simply use the template above, but with the appropriate `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<COMPONENT>_DEFAULTS`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, you'll continue to have auto-complete support, and type-safety while you develop.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}